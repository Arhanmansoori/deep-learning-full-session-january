{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPrAQN6L3hjMXFclLfpNwgM"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"QnUcS06dKg82","executionInfo":{"status":"ok","timestamp":1705292684154,"user_tz":-330,"elapsed":5319,"user":{"displayName":"arhan mansoori","userId":"12461670048896947616"}}},"outputs":[],"source":["import tensorflow as tf\n","from tensorflow import keras\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from statistics import mode"]},{"cell_type":"code","source":["df=pd.read_csv('insurance_data.csv')"],"metadata":{"id":"TJhUgd6OMoKk","executionInfo":{"status":"ok","timestamp":1705292684156,"user_tz":-330,"elapsed":18,"user":{"displayName":"arhan mansoori","userId":"12461670048896947616"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"id":"k-VyQhIhNMqe","executionInfo":{"status":"ok","timestamp":1705292684156,"user_tz":-330,"elapsed":14,"user":{"displayName":"arhan mansoori","userId":"12461670048896947616"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["\n","X=df.drop(columns='bought_insurance',axis=1)"],"metadata":{"id":"woEb4Vw7P9Hy","executionInfo":{"status":"ok","timestamp":1705293700567,"user_tz":-330,"elapsed":736,"user":{"displayName":"arhan mansoori","userId":"12461670048896947616"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["\n","scaler = StandardScaler()\n","X_train = scaler.fit_transform(X_train)\n","X_test = scaler.transform(X_test)\n","data\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":927},"id":"V5ydMVt8QQnY","executionInfo":{"status":"ok","timestamp":1705293720057,"user_tz":-330,"elapsed":763,"user":{"displayName":"arhan mansoori","userId":"12461670048896947616"}},"outputId":"3a22dda7-bc51-4dea-83ec-09985375ef86"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    age  affordibility  bought_insurance\n","0    22              1                 0\n","1    25              0                 0\n","2    47              1                 1\n","3    52              0                 0\n","4    46              1                 1\n","5    56              1                 1\n","6    55              0                 0\n","7    60              0                 1\n","8    62              1                 1\n","9    61              1                 1\n","10   18              1                 0\n","11   28              1                 0\n","12   27              0                 0\n","13   29              0                 0\n","14   49              1                 1\n","15   55              1                 1\n","16   25              0                 1\n","17   58              1                 1\n","18   19              0                 0\n","19   18              1                 0\n","20   21              1                 0\n","21   26              0                 0\n","22   40              1                 1\n","23   45              1                 1\n","24   50              1                 1\n","25   54              1                 1\n","26   23              1                 0\n","27   46              1                 0"],"text/html":["\n","  <div id=\"df-ce0afa42-d5df-4430-9935-d1b0ba06fef2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>affordibility</th>\n","      <th>bought_insurance</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>22</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>25</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>47</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>52</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>46</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>56</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>55</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>60</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>62</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>61</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>18</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>28</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>27</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>29</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>49</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>55</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>25</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>58</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>19</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>18</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>21</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>26</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>40</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>45</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>50</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>54</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>23</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>46</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ce0afa42-d5df-4430-9935-d1b0ba06fef2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ce0afa42-d5df-4430-9935-d1b0ba06fef2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ce0afa42-d5df-4430-9935-d1b0ba06fef2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f13c8e0c-2193-4aeb-95fd-b4af8a38d52b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f13c8e0c-2193-4aeb-95fd-b4af8a38d52b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f13c8e0c-2193-4aeb-95fd-b4af8a38d52b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_8aad4475-5cb3-4e25-8994-5a4eed000322\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_8aad4475-5cb3-4e25-8994-5a4eed000322 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["model = tf.keras.Sequential([\n","    tf.keras.layers.Dense(1, input_shape=(X_train.shape[1],), activation='sigmoid'),\n","    tf.keras.layers.Dense(1, activation='sigmoid'),\n","    tf.keras.layers.Dense(1, activation='sigmoid')\n","])\n","model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])\n","model.fit(X_train, y_train, epochs=10, batch_size=32, validation_split=0.2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"h7O6zgeYQYtf","executionInfo":{"status":"ok","timestamp":1705293721476,"user_tz":-330,"elapsed":1430,"user":{"displayName":"arhan mansoori","userId":"12461670048896947616"}},"outputId":"663c810a-f425-4068-8ff5-427bd8fcb749"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/10\n","1/1 [==============================] - 1s 925ms/step - loss: 0.8443 - accuracy: 0.5294 - val_loss: 0.9734 - val_accuracy: 0.4000\n","Epoch 2/10\n","1/1 [==============================] - 0s 36ms/step - loss: 0.8438 - accuracy: 0.5294 - val_loss: 0.9725 - val_accuracy: 0.4000\n","Epoch 3/10\n","1/1 [==============================] - 0s 35ms/step - loss: 0.8432 - accuracy: 0.5294 - val_loss: 0.9717 - val_accuracy: 0.4000\n","Epoch 4/10\n","1/1 [==============================] - 0s 56ms/step - loss: 0.8427 - accuracy: 0.5294 - val_loss: 0.9708 - val_accuracy: 0.4000\n","Epoch 5/10\n","1/1 [==============================] - 0s 36ms/step - loss: 0.8421 - accuracy: 0.5294 - val_loss: 0.9699 - val_accuracy: 0.4000\n","Epoch 6/10\n","1/1 [==============================] - 0s 36ms/step - loss: 0.8415 - accuracy: 0.5294 - val_loss: 0.9690 - val_accuracy: 0.4000\n","Epoch 7/10\n","1/1 [==============================] - 0s 39ms/step - loss: 0.8410 - accuracy: 0.5294 - val_loss: 0.9681 - val_accuracy: 0.4000\n","Epoch 8/10\n","1/1 [==============================] - 0s 39ms/step - loss: 0.8404 - accuracy: 0.5294 - val_loss: 0.9672 - val_accuracy: 0.4000\n","Epoch 9/10\n","1/1 [==============================] - 0s 37ms/step - loss: 0.8399 - accuracy: 0.5294 - val_loss: 0.9663 - val_accuracy: 0.4000\n","Epoch 10/10\n","1/1 [==============================] - 0s 35ms/step - loss: 0.8393 - accuracy: 0.5294 - val_loss: 0.9655 - val_accuracy: 0.4000\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.src.callbacks.History at 0x7e40e590e800>"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["model.evaluate(X_test,y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rminj7heQ-fT","executionInfo":{"status":"ok","timestamp":1705293724366,"user_tz":-330,"elapsed":454,"user":{"displayName":"arhan mansoori","userId":"12461670048896947616"}},"outputId":"e399589e-f484-49cb-dc45-302eb9b04948"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 26ms/step - loss: 0.9011 - accuracy: 0.5000\n"]},{"output_type":"execute_result","data":{"text/plain":["[0.9010860919952393, 0.5]"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["y_test_pred=model.predict(X_test)\n","y_test_pred.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QjhX4zgsRR6X","executionInfo":{"status":"ok","timestamp":1705293726823,"user_tz":-330,"elapsed":566,"user":{"displayName":"arhan mansoori","userId":"12461670048896947616"}},"outputId":"ed264787-3c58-4f86-dcec-4365204bf81e"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 65ms/step\n"]},{"output_type":"execute_result","data":{"text/plain":["(6, 1)"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["y_test_pred[2]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"y6ACiaw9Rj1N","executionInfo":{"status":"ok","timestamp":1705293726823,"user_tz":-330,"elapsed":5,"user":{"displayName":"arhan mansoori","userId":"12461670048896947616"}},"outputId":"211164d2-09f3-4e01-de1c-7a537f974538"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.7140318], dtype=float32)"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["y_test_label=[np.argmax(i) for i in y_test_pred]\n","y_test_label=np.array(y_test_label)\n"],"metadata":{"id":"Y3IZFeDRRtCd","executionInfo":{"status":"ok","timestamp":1705293727457,"user_tz":-330,"elapsed":11,"user":{"displayName":"arhan mansoori","userId":"12461670048896947616"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["cm=tf.math.confusion_matrix(y_test,y_test_label)\n","type(cm)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FKxH-uycRzBh","executionInfo":{"status":"ok","timestamp":1705293727959,"user_tz":-330,"elapsed":17,"user":{"displayName":"arhan mansoori","userId":"12461670048896947616"}},"outputId":"341f8244-223d-4fbb-9845-a894c0176fda"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensorflow.python.framework.ops.EagerTensor"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["weights = model.get_weights()\n","print(weights)\n","for layer_num, layer_weights in enumerate(weights):\n","    print(f\"Layer {layer_num + 1} weights shape: {layer_weights.shape}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"27W59o3QUKPD","executionInfo":{"status":"ok","timestamp":1705293727960,"user_tz":-330,"elapsed":14,"user":{"displayName":"arhan mansoori","userId":"12461670048896947616"}},"outputId":"67ffdb55-fc39-42b3-d569-45b768116124"},"execution_count":31,"outputs":[{"output_type":"stream","name":"stdout","text":["[array([[-0.5445453],\n","       [-1.0861524]], dtype=float32), array([-0.00999299], dtype=float32), array([[1.3436036]], dtype=float32), array([-0.0099943], dtype=float32), array([[1.6706244]], dtype=float32), array([-0.00999356], dtype=float32)]\n","Layer 1 weights shape: (2, 1)\n","Layer 2 weights shape: (1,)\n","Layer 3 weights shape: (1, 1)\n","Layer 4 weights shape: (1,)\n","Layer 5 weights shape: (1, 1)\n","Layer 6 weights shape: (1,)\n"]}]},{"cell_type":"code","source":["def sigmoid(x):\n","  return 1/(1+np.exp(-x))\n","\n","def log_loss(y_t,y_p):\n","  e=1e-10\n","  y_pd=[max(i,e) for i in y_p]\n","  y_pd=[max(i,1-e) for i in y_p]\n","  y_pd=np.array(y_pd)\n","  return -np.mean(y_t*np.log(y_pd) + (1-y_t)* (np.log(1-y_pd)))"],"metadata":{"id":"gKH9ejZtUvis","executionInfo":{"status":"ok","timestamp":1705293728585,"user_tz":-330,"elapsed":8,"user":{"displayName":"arhan mansoori","userId":"12461670048896947616"}}},"execution_count":32,"outputs":[]},{"cell_type":"code","source":["def gradient_descent(age,aff,y_t,epoches,loss_thr):\n","  w1=1\n","  w2=2\n","  b=0\n","  n=len(age)\n","  LR=0.5\n","\n","  for i in range(epoches):\n","    W_S= w1*age + w2 * aff + b\n","    y_p= sigmoid(W_S)\n","    loss= log_loss(y_t,y_p)\n","\n","    w_age= (1/n)*np.dot(age,(y_t-y_p))\n","    w_aff= (1/n)*np.dot(aff,(y_t-y_p))\n","    bais= np.dot(aff,(y_t-y_p))\n","\n","    w1=w1-LR*w_age\n","    w2=w2-LR*w_aff\n","    b=b - LR * bais\n","    print(\"Epochs\",i,\" \",\"W1\",\" \",w1,\" \",\"w2\",w2,\" \",\"bais\",b)\n",""],"metadata":{"id":"cUtzQBwmXOPx","executionInfo":{"status":"ok","timestamp":1705293729111,"user_tz":-330,"elapsed":6,"user":{"displayName":"arhan mansoori","userId":"12461670048896947616"}}},"execution_count":33,"outputs":[]},{"cell_type":"code","source":["gradient_descent(X_train[\"age\"],X_train[\"affordibility\"],y_train,100,0.53)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":193},"id":"DPDfxWIVXQmn","executionInfo":{"status":"error","timestamp":1705293739631,"user_tz":-330,"elapsed":452,"user":{"displayName":"arhan mansoori","userId":"12461670048896947616"}},"outputId":"0bc7597f-a8b6-4452-c321-a31429ff0a8b"},"execution_count":35,"outputs":[{"output_type":"error","ename":"IndexError","evalue":"only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mIndexError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-35-a3aa91bd91ae>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mgradient_descent\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"age\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"affordibility\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0my_train\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m100\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m0.53\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mIndexError\u001b[0m: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"]}]},{"cell_type":"code","source":[],"metadata":{"id":"4rxbHfFYbUyy"},"execution_count":null,"outputs":[]}]}